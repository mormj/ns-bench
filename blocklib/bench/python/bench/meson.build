#autogenerated
######################
#  Python Bindings ###
######################

# Generate _python.cc for each block
fs = import('fs')
if fs.exists('bindings/meson.build')
subdir('bindings')
endif
#srcs = files('__init__.py') #+ bench_pure_python_sources
srcs = ['__init__.py']

foreach s: srcs
configure_file(copy: true,
    input: s,
    output: s
)
endforeach

d = {
  'blocks' : bench_pybind_names,
  'module' : 'bench',
  'imports' : ['gnuradio.gr']
}

gen_bench_pybind = custom_target('gen_bench_pybind',
                        output : ['bench_pybind.cc'],
                        command : ['python3', join_paths(SCRIPTS_DIR,'process_module_pybind.py'),
                            '--blocks', d['blocks'],
                            '--imports', d['imports'],
                            '--module', d['module'],
                            '--output_file', '@OUTPUT@', 
                            '--build_dir', join_paths(meson.build_root())],
                        install : false)      

bench_pybind_sources += gen_bench_pybind

gnuradio_blocklib_bench_pybind = py3_inst.extension_module('bench_python',
    bench_pybind_sources, 
    include_directories: ['../../lib'],
    dependencies : [gnuradio_blocklib_bench_dep, python3_dep, pybind11_dep],
    link_language : 'cpp',
    install : true,
    install_dir : join_paths(py3_inst.get_install_dir(),'gnuradio','bench')
)

gnuradio_blocklib_bench_pybind_dep = declare_dependency(include_directories : incdir,
					   link_with : gnuradio_blocklib_bench_pybind,
                       dependencies : bench_deps)


# Target for pure python
py3_inst.install_sources(srcs, subdir : join_paths('gnuradio','bench'))